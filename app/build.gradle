plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

def getProps(path) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(path)))
    return props
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.ferit.uiojqanlrg"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            getProps('./config/prod.props').each { p ->
                buildConfigField "String", p.key, p.value
            }
        }

        debug {
            debuggable true
            getProps('./config/dev.props').each { p ->
                buildConfigField "String", p.key, p.value
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

def lifecycle_version = "2.2.0"
def arch_version = "2.1.0"
def coroutine_version = "1.3.9"
def retrofit_version = "2.9.0"
def okhttp_logging_version = "4.6.0"
def glide_version = "4.11.0"
def timber_version = "4.7.1"
def easypermissions_version = "3.0.0"
def location_service_version = "17.0.0"
def lottie_version = "3.4.0"
def pagingVersion = '3.0.0-alpha12'

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$recycler_view_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // Fragment-ktx
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"

    // Activity-ktx
    implementation "androidx.activity:activity-ktx:$activity_ktx_version"

    // Navigation
    implementation "androidx.navigation:navigation-runtime-ktx:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Lifecycles extensions
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    //implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_extensions_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_extensions_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_version"
    implementation 'com.google.code.gson:gson:2.8.6'

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // ViewPager2
    implementation "androidx.viewpager2:viewpager2:1.1.0-alpha01"

    // Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.3'

    // Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Easy Permissions
    implementation "pub.devrel:easypermissions:$easypermissions_version"

    // Google Maps & Location Services
    implementation "com.google.android.gms:play-services-location:$location_service_version"
    implementation "com.google.android.gms:play-services-maps:$location_service_version"

    // Lottie Animations
    implementation "com.airbnb.android:lottie:$lottie_version"

    // Paging 3
    implementation "androidx.paging:paging-runtime:$pagingVersion"

}